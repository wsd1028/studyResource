
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/lib/icon/iconfont.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/echart/echarts.js"></script>
    <script src="~/lib/vue/vue.js"></script>
    <script src="~/js/echartMap/vproxy.js"></script>
    <style type="text/css">
        .icon { width: 1em; height: 1em; vertical-align: -0.15em; fill: currentColor; overflow: hidden; }
        body { margin: 0; padding: 0; border: 0; font-size: 100%; font-family: "\5FAE\8F6F\96C5\9ED1", "\5B8B\4F53", "\9ED1\4F53"; background-image: url('../../images/body_blank.jpg'); background-size: cover; color: #f9f9f9; background-position: top; }
            body a { outline: none; blr: expression(this.onFocus=this.blur()); }
        .tab-content { position: relative; width: 100%; height: 100%; background: rgba(14, 41, 128, 0.5) !important; box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.3); padding: 15px; margin: 25px 0 25px 0; border-radius: 4px; }
            .tab-content:last-child { }
        .titleSpan { font-size: 18px }

        .circleClassNormal1 { width: 20%; height: 35%; border: 2px dashed #f154b1; border-radius: 50%; left: 40%; top: 40%; position: absolute; text-align: center; line-height: 315px; font-size: 20px; color: #e6a23c; }
        .circleClassNormal2 { width: 35%; height: 15%; border: 2px dashed #f154b1; border-radius: 50%; left: 30%; top: 30%; position: absolute; text-align: center; line-height: 60px; font-size: 20px; color: #e6a23c; }
        .circleClassNormal3 { width: 30%; height: 15%; border: 2px dashed #f154b1; border-radius: 50%; left: 65%; top: 35%; position: absolute; text-align: center; line-height: 60px; font-size: 20px; color: #e6a23c; }
        .circleClassNormal4 { width: 32%; height: 13%; border: 2px dashed #f154b1; border-radius: 50%; left: 51%; top: 44%; position: absolute; text-align: center; line-height: 140px; font-size: 20px; color: #e6a23c; }
        .circleClassNormal { position: absolute; width: 90%; height: 970px; bottom: 0px; margin-left: auto; margin-right: auto; }
    </style>

</head>
<body>
    <section>
        <article class="col-xs-3">
            <aside class="tab-content">
                <div id="div_jiGUse" style="width:100%;height:470px;">
                    <div style="position:absolute;">
                        <div class="titleSpan">{{title}}</div>
                    </div>
                    <div id="leftTopWaitting" style="width:50px;height:50px;padding-top:215px;margin-left:40%">
                        <svg version="1.1" id="L2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                             viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">
                        <circle fill="none" stroke="#fff" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48" />



                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">
                        <animateTransform attributeName="transform"
                                          dur="2s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                                      </line>
                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">
                        <animateTransform attributeName="transform"
                                          dur="15s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                                      </line>
                        </svg>
                    </div>
                    <div  id="leftTop" style="width:100%;height:100%;display:none">
                        <div style="width:60%; height: 400px;float:left">
                            <div id="pieChart1" style="width:90%; height: 300px;margin:0 auto;margin-top:85px"></div>
                        </div>
                        <div id="div_legend1" style="width: 40%;height: 400px;float:right">
                            <div style="width:100%; height: 200px;margin-top:140px">
                                <template v-for="(item,index) in items">
                                    <template v-if="item" style="">
                                        <div style="text-align:right;float:left;width:50%;color:#fff;margin-bottom:10px">{{item.name}}</div>
                                        <div style="text-align:center;float:left;width:50%;color:#fff;margin-bottom:10px">{{item.value}}</div>
                                    </template>
                                </template>
                            </div>
                        </div>
                        <div style="width:100%;height:70px;float:left">
                            <div style="width: 50%;margin: 35px auto;">
                                <div style="float:left;margin-right:35px">
                                    <div style="width:25px;height:14px;background-color:#55639a;float:left;border-radius:3px;"></div>
                                    <p style="color:#fff;float:left;font-size:14px;line-height:14px;margin-left:5px">剩余(台)</p>
                                </div>
                                <div style="float:left;">
                                    <div style="width:25px;height:14px;background-color:#12a87f;float:left;border-radius:3px;"></div>
                                    <p style="color:#fff;float:left;font-size:14px;line-height:14px;margin-left:5px">已用(台)</p>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </aside>
            <aside class="tab-content">
                <div id="div_jiGResource" style="width:100%;height:470px;">
                    <div>
                        <div class="titleSpan">{{title}}</div>
                    </div>
                    <div id="leftBottomWaitting" style="width:50px;height:50px;padding-top:215px;margin-left:40%">
                        <svg version="1.1" id="L2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                             viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">
                        <circle fill="none" stroke="#fff" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48" />







                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">
                        <animateTransform attributeName="transform"
                                          dur="2s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                        </line>
                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">
                        <animateTransform attributeName="transform"
                                          dur="15s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                        </line>
                        </svg>
                    </div>
                    <div id="leftBottom" style="width:100%; height: 455px;display:none">
                        <div id="barChart1" style="width:100%; height: 100%;"></div>
                    </div>
                </div>
            </aside>
        </article>
        <article class="col-xs-6">
            <aside class="tab-content">
                <div id="div_customerMap" style="width:100%;height:995px;">
                    <div style="float:left;width:50%">
                        <div class="titleSpan">{{title}}</div>
                    </div>
                    <div style="width:50%;text-align:right;float:right">
                        <button v-if="currentName!='四川省'" class="btn btn-default" id="backup" v-on:click='backToMaxUp($event)' style="cursor:pointer;background-color:#1f8be7;color:#fff">返回上一级</button>
                    </div>
                    <div id="mapChart2" style="width:50%;height:330px;position:absolute;top:25px;left:10px;z-index:999">
                    </div>
                    <div id="centerWaitting" style="width:50px;height:50px;padding-top:475px;margin-left:40%;">
                        <svg version="1.1" id="L2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                             viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">
                        <circle fill="none" stroke="#fff" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48" />



                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">
                        <animateTransform attributeName="transform"
                                          dur="2s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                         </line>
                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">
                        <animateTransform attributeName="transform"
                                          dur="15s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                        </line>
                        </svg>
                    </div>
                    <div id="center" style="width:100%;height:100%;display:none">
                        <div id="line" style="height: 400px;position: absolute; top: 145px; left: 86px;transform: rotate(30deg);z-index:999">
                            <div style="width: 240px;  border-bottom: 2px solid rgb(6, 194, 211); position: absolute; left: 51px;z-index: 1000;border-bottom-right-radius: 1%;"> </div>
                            <div style=" border-color: rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) rgba(0, 0, 0, 0) rgb(6, 194, 211); border-style: solid;border-width: 10px;height: 0px; width: 0px;position: absolute;left: 286px; top: -10px;transform: rotate(-2deg);"></div>
                        </div>

                        <div id="mapChart1" v-on:mouseover="mouseoverMap" v-on:mouseout="mouseoutMap" style="width:100%;height:950px;margin-left:auto;margin-right:auto">

                        </div>
                        <div id="mapCircle" v-on:mouseover="mouseoverMapCircle($event)" class="circleClassNormal" style="">
                            <div id="mapCircle" class="circleClassNormal1" style="">川西</div>
                            <div id="mapCircle" class="circleClassNormal2" style="">川北</div>
                            <div id="mapCircle" class="circleClassNormal3" style=" ">川东</div>
                            <div id="mapCircle" class="circleClassNormal4" style="">川南</div>
                        </div>

                    </div>
                    <div style="width:90px;height:120px;position:absolute;bottom: 10px;">
                        <div>
                            <table>
                                <tr>
                                    <td style="color:#ee4d5a">★</td>
                                    <td style="color:#fff;padding-right:10px">五星</td>
                                    <td style="background-color:#ee4d5a;width:30px"></td>
                                </tr>
                                <tr>
                                    <td style="color:#f66356">★</td>
                                    <td style="color:#fff">四星</td>
                                    <td style="background-color:#f66356"></td>
                                </tr>
                                <tr>
                                    <td style="color:#f97b57">★</td>
                                    <td style="color:#fff">三星</td>
                                    <td style="background-color:#f97b57"></td>
                                </tr>
                                <tr>
                                    <td style="color:#f7945d">★</td>
                                    <td style="color:#fff">二星</td>
                                    <td style="background-color:#f7945d"></td>
                                </tr>
                                <tr>
                                    <td style="color:#f3ad6a">★</td>
                                    <td style="color:#fff">一星</td>
                                    <td style="background-color:#f3ad6a"></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </aside>
        </article>
        <article class="col-xs-3">
            <aside class="tab-content">
                <div id="div_ipUseMonitor" style="width:100%;height:470px">
                    <div style="position:absolute;">
                        <div class="titleSpan">{{title}}</div>
                    </div>
                    <div id="rightTopWaitting" style="width:50px;height:50px;padding-top:215px;margin-left:40%">
                        <svg version="1.1" id="L2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                             viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">
                        <circle fill="none" stroke="#fff" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48" />



                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">
                        <animateTransform attributeName="transform"
                                          dur="2s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />







                        </line>
                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">
                        <animateTransform attributeName="transform"
                                          dur="15s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                        </line>
                        </svg>
                    </div>
                    <div id="rightTop" style="width:100%;height:100%;display:none">
                        <div style="width:100%; height: 400px; float: left;">
                            <div id="pieChart2" style="width:60%; height: 300px;margin:0 auto;margin-top:85px"></div>
                        </div>
                        <div style="width:100%;height:70px;float:left">
                            <div style="width: 50%;margin: 35px auto;">
                                <div style="float:left;margin-right:35px">
                                    <div style="width:25px;height:14px;background-color:#55639a;float:left;border-radius:3px;"></div>
                                    <p style="color:#fff;float:left;font-size:14px;line-height:14px;margin-left:5px">剩余IP</p>
                                </div>
                                <div style="float:left;">
                                    <div style="width:25px;height:14px;background-color:#12a87f;float:left;border-radius:3px;"></div>
                                    <p style="color:#fff;float:left;font-size:14px;line-height:14px;margin-left:5px">已用IP</p>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </aside>
            <aside class="tab-content">
                <div id="div_portResource" style="width:100%;height:470px;">
                    <div>
                        <div class="titleSpan">{{title}}</div>
                    </div>
                    <div id="rightBottomWaitting" style="width:50px;height:50px;padding-top:215px;margin-left:40%">
                        <svg version="1.1" id="L2" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                             viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">
                        <circle fill="none" stroke="#fff" stroke-width="4" stroke-miterlimit="10" cx="50" cy="50" r="48" />



                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="85" y2="50.5">
                        <animateTransform attributeName="transform"
                                          dur="2s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />







                        </line>
                        <line fill="none" stroke-linecap="round" stroke="#fff" stroke-width="4" stroke-miterlimit="10" x1="50" y1="50" x2="49.5" y2="74">
                        <animateTransform attributeName="transform"
                                          dur="15s"
                                          type="rotate"
                                          from="0 50 50"
                                          to="360 50 50"
                                          repeatCount="indefinite" />



                         </line>
                        </svg>
                    </div>
                    <div id="rightBottom" style="width:100%; height: 455px;display:none">
                        <div id="barChart2" style="width:100%; height: 100%;"></div>
                    </div>
                </div>
            </aside>
        </article>

    </section>
    <script>

        function drawJiGUse() {
            var vue_jiGUse = new Vue({
                el: '#div_jiGUse',
                data: {
                    title: '机柜使用',
                    echartName: "机柜总数",
                    data1: [],
                    items: [],
                    //isWaitting: false
                },

                methods: {
                    showWaitting: function () {
                        //this.isWaitting = true;
                        $('#leftTop').hide();
                        $('#leftTopWaitting').show();
                    },
                    closeWaitting: function () {

                        this.isWaitting = false;
                        $('#leftTopWaitting').hide();
                        $('#leftTop').show();
                    },
                    createOption: function () {
                        var _this = this;
                        var myChart = echarts.init(document.getElementById('pieChart1'));
                        var option = {
                            title: {
                                text: _this.echartName,
                                textStyle: {
                                    color: '#fff',
                                    fontSize: '14'
                                },
                                top: 20,
                                left: 75,
                                subtext: '',
                                subtextStyle: {
                                    color: "#fff",
                                    fontSize: 12
                                }
                            },
                            series: {
                                name: _this.echartName,
                                type: 'gauge',
                                splitNumber: 1, //刻度数量
                                min: 0,
                                max: _this.data1.jiGSum,//(data1.jiGSum / pro).toFixed(1),
                                textStyle: {
                                    fontSize: 12
                                },
                                center: ['50%', '50%'],
                                radius: '90%',
                                detail: {
                                    offsetCenter: [0, 0],
                                    formatter: '已用{a|' + _this.data1.jiGUsed + '}台 \n占全省机柜{a|' + _this.data1.percent + '}%',
                                    textStyle: {
                                        fontSize: 14,
                                        color: '#fff'
                                    },
                                    rich: {
                                        a: {
                                            fontSize: 24,
                                            color: '#fff'
                                        }
                                    }
                                },
                                title: {
                                    textStyle: {
                                        color: "#fff"
                                    },
                                    offsetCenter: [0, '70%']
                                },
                                axisLine: {
                                    show: false,
                                    lineStyle: { // 属性lineStyle控制线条样式 (_data.Data[0].FluxData.Flux / _data.Data[0].FluxData.Speed).toFixed(1)
                                        color: [
                                            [(_this.data1.jiGUsed / _this.data1.jiGSum).toFixed(1), '#12a87f'],
                                            [1, '#55639a']
                                        ],
                                        width: 15
                                    }
                                },
                                axisTick: {
                                    show: false,
                                    lineStyle: {
                                        color: "#fff",
                                        width: 1
                                    },
                                    length: -2,
                                    splitNumber: 3,
                                    type: 'solid'
                                },
                                pointer: {
                                    show: false
                                },
                                splitLine: {
                                    show: false,
                                    length: -5,
                                    lineStyle: {
                                        color: "#fff"
                                    }
                                },
                                axisLabel: {
                                    formatter: '    {value}',
                                    distance: -25,
                                    textStyle: {
                                        color: "#fff",
                                        fontSize: '14'
                                    }
                                },

                                data: [{
                                    value: ((_this.data1.jiGUsed / _this.data1.jiGSum) * 100).toFixed(0)
                                }]

                            }
                        };
                        myChart.setOption(option);
                        myChart.resize();
                    },
                    getData: function () {
                        var _this = this;
                        _this.showWaitting();
                        proxy.getRackUseage(function (res) {
                            var timeOut = setTimeout(function () {
                                _this.closeWaitting();
                                _this.data1 = res;
                                _this.items = res._data;
                                
                                _this.createOption();
                                clearTimeout(timeOut);
                            }, 1000);
                        })
                    }
                },
                mounted: function () {
                    this.getData();
                }
            });

        }

        function drawIpUseMonitor() {
            //var dataipUseMonitor = data.ipUseMonitor;
            var vue_ipUseMonitor = new Vue({
                el: '#div_ipUseMonitor',
                data: {
                    title: 'IP使用监控',
                    echartName: "IP使用",
                    data1: [],
                },
                methods: {
                    showWaitting: function () {
                        $('#rightTop').hide();
                        $('#rightTopWaitting').show();
                    },
                    closeWaitting: function () {
                        $('#rightTopWaitting').hide();
                        $('#rightTop').show();
                    },
                    getData: function () {
                        var _this = this;
                        _this.showWaitting();
                        proxy.getIpUseMonitor(function (res) {
                            var timeOut = setTimeout(function () {
                                _this.closeWaitting();
                                _this.data1 = res;
                                _this.createOption();
                                clearTimeout(timeOut);
                            }, 5000);
                        })
                    },
                    createOption: function () {
                        var _this = this;
                        var myChart = echarts.init(document.getElementById('pieChart2'));
                        var option = {
                            title: {
                                text: _this.echartName,
                                textStyle: {
                                    color: '#fff',
                                    fontSize: '14'
                                },
                                top: 10,
                                left: 95,
                                subtext: '',
                                subtextStyle: {
                                    color: "#fff",
                                    fontSize: 12
                                }
                            },
                            series: {
                                name: _this.echartName,
                                type: 'gauge',
                                splitNumber: 1, //刻度数量
                                min: 0,
                                max: _this.data1.ipSum,
                                textStyle: {
                                    fontSize: 12
                                },
                                center: ['50%', '50%'],
                                radius: '90%',
                                detail: {
                                    offsetCenter: [0, 0],
                                    formatter: '空闲{a|' + _this.data1.ipPercent + '}%',
                                    textStyle: {
                                        fontSize: 14,
                                        color: '#fff'
                                    },
                                    rich: {
                                        a: {
                                            fontSize: 24,
                                            color: '#fff'
                                        }
                                    }
                                },
                                title: {
                                    textStyle: {
                                        color: "#fff"
                                    },
                                    offsetCenter: [0, '70%']
                                },
                                axisLine: {
                                    show: false,
                                    lineStyle: { // 属性lineStyle控制线条样式 (_data.Data[0].FluxData.Flux / _data.Data[0].FluxData.Speed).toFixed(1)
                                        color: [
                                            [(_this.data1.ipUsed / _this.data1.ipSum).toFixed(1), '#12a87f'],
                                            [1, '#55639a']
                                        ],
                                        width: 15
                                    }
                                },
                                axisTick: {
                                    show: false,
                                    lineStyle: {
                                        color: "#fff",
                                        width: 1
                                    },
                                    length: -2,
                                    splitNumber: 3
                                },
                                pointer: {
                                    show: false
                                },
                                splitLine: {
                                    show: false,
                                    length: -5,
                                    lineStyle: {
                                        color: "#fff"
                                    }
                                },
                                axisLabel: {
                                    formatter: '    {value}',
                                    distance: -25,
                                    textStyle: {
                                        color: "#fff",
                                        fontSize: '14'
                                    }
                                },

                                data: [{
                                    value: ((_this.data1.ipUsed / _this.data1.ipSum) * 100).toFixed(0)
                                }]

                            }
                        };
                        myChart.setOption(option);
                        myChart.resize();
                    }
                },
                mounted: function () {
                    this.getData();
                }
            });

        }

        function drawJiGResource() {

            //var datajiGResource = data.jiGResource;
            var vue_jiGResource = new Vue({
                el: '#div_jiGResource',
                data: {
                    title: '机柜资源',
                    data1: [],
                },
                methods: {
                    showWaitting: function () {
                        $('#leftBottom').hide();
                        $('#leftBottomWaitting').show();
                    },
                    closeWaitting: function () {
                        $('#leftBottomWaitting').hide();
                        $('#leftBottom').show();
                    },
                    getData: function () {
                        var _this = this;
                        _this.showWaitting();
                        proxy.getRackResource(function (res) {

                            var timeOut = setTimeout(function () {
                                _this.closeWaitting();
                                _this.data1 = res;
                                _this.createOption();
                                clearTimeout(timeOut);
                            }, 2000);
                        })
                    },
                    createOption: function () {
                        var _this = this;
                        var myChart = echarts.init(document.getElementById('barChart1'));

                        var xdata = [], seriesData1 = [], seriesData2 = [];
                        for (var i = 0; i < _this.data1.length; i++) {
                            xdata.push(_this.data1[i].name);
                            seriesData1.push(_this.data1[i].alreadySale);
                            seriesData2.push(_this.data1[i].canSale);
                        }


                        var option = {
                            tooltip: {
                                trigger: 'axis',
                                axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                                },
                                formatter: function (params) {
                                    return params[0].name + '<br/>'
                                        + params[0].seriesName + ' : ' + params[0].value + '<br/>'
                                        + params[1].seriesName + ' : ' + (params[1].value + params[0].value);
                                }
                            },
                            grid: {
                                bottom: 0,
                                left: '5%',
                                right: '5%'
                            },
                            legend: {
                                selectedMode: true,
                                data: ['已销售(台)', '可销售(台)'],
                                textStyle: {
                                    color: '#fff'
                                }
                            },
                            xAxis: [
                                {
                                    type: 'category',
                                    data: xdata,
                                    axisTick: {
                                        show: false
                                    },
                                    axisLabel: {
                                        inside: true,
                                        margin: 0,
                                        color: '#fff',
                                        interval: 0
                                    },
                                    position: 'top',
                                    axisLine: {
                                        show: false
                                    }
                                }
                            ],
                            dataZoom: [{
                                type: 'inside',
                                show: true,
                                start: 0,
                                end: 100 //初始化滚动条
                            }],
                            yAxis: [
                                {
                                    type: 'value',
                                    boundaryGap: [0, 0.1],
                                    show: false
                                }
                            ],
                            series: [
                                {
                                    name: '已销售(台)',
                                    type: 'bar',
                                    stack: 'sum',
                                    barCategoryGap: '50%',
                                    itemStyle: {
                                        normal: {
                                            color: '#55639a',
                                            barBorderColor: 'tomato',
                                            barBorderWidth: 0,
                                            barBorderRadius: 0,
                                            label: {
                                                show: true, position: 'insideTop'
                                            }
                                        }
                                    },
                                    barMinHeight: 25,
                                    data: seriesData1
                                },
                                {
                                    name: '可销售(台)',
                                    type: 'bar',
                                    stack: 'sum',
                                    itemStyle: {
                                        normal: {
                                            color: '#12a87f',
                                            barBorderColor: 'tomato',
                                            barBorderWidth: 0,
                                            barBorderRadius: 0,
                                            label: {
                                                show: true,
                                                position: 'insideTop',
                                                formatter: function (params) {
                                                    for (var i = 0, l = option.xAxis[0].data.length; i < l; i++) {
                                                        if (option.xAxis[0].data[i] == params.name) {
                                                            return option.series[0].data[i] + params.value;
                                                        }
                                                    }
                                                },
                                                textStyle: {
                                                    color: '#fff'
                                                }
                                            }
                                        }
                                    },
                                    barMinHeight: 25,
                                    data: seriesData2
                                }
                            ]
                        };

                        myChart.setOption(option);
                    }
                },
                mounted: function () {
                    this.getData();
                }
            });
        }

        function drawPortResource() {
            //var dataportResource = data.portResource;
            var vue_portResource = new Vue({
                el: '#div_portResource',
                data: {
                    title: '端口资源',
                    data1: [],
                },
                methods: {
                    showWaitting: function () {
                        $('#rightBottom').hide();
                        $('#rightBottomWaitting').show();
                    },
                    closeWaitting: function () {
                        $('#rightBottomWaitting').hide();
                        $('#rightBottom').show();
                    },
                    getData: function () {
                        var _this = this;
                        _this.showWaitting();
                        proxy.getPortResource(function (res) {

                            var timeOut = setTimeout(function () {
                                _this.closeWaitting();
                                _this.data1 = res;
                                _this.createOption();
                                clearTimeout(timeOut);
                            }, 2000);
                        })
                    },
                    createOption: function () {
                        var _this = this;
                        var myChart = echarts.init(document.getElementById('barChart2'));

                        var xdata = [], seriesData1 = [], seriesData2 = [];
                        for (var i = 0; i < _this.data1.length; i++) {
                            xdata.push(_this.data1[i].name);
                            seriesData1.push(_this.data1[i].used);
                            seriesData2.push(_this.data1[i].unUsed);
                        }


                        var option = {
                            tooltip: {
                                trigger: 'axis',
                                axisPointer: {            // 坐标轴指示器，坐标轴触发有效
                                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
                                },
                                formatter: function (params) {
                                    return params[0].name + '<br/>'
                                        + params[0].seriesName + ' : ' + params[0].value + '<br/>'
                                        + params[1].seriesName + ' : ' + (params[1].value + params[0].value);
                                }
                            },
                            grid: {
                                bottom: 0,
                                left: '5%',
                                right: '5%'
                            },
                            legend: {
                                selectedMode: true,
                                data: ['空闲端口', '租用端口'],
                                textStyle: {
                                    color: '#fff'
                                }
                            },
                            xAxis: [
                                {
                                    type: 'category',
                                    data: xdata,
                                    axisTick: {
                                        show: false
                                    },
                                    axisLabel: {
                                        inside: true,
                                        margin: 0,
                                        color: '#fff',
                                        interval: 0
                                    },
                                    position: 'top',
                                    axisLine: {
                                        show: false
                                    }
                                }
                            ],
                            dataZoom: [{
                                type: 'inside',
                                show: true,
                                start: 0,
                                end: 100 //初始化滚动条
                            }],
                            yAxis: [
                                {
                                    type: 'value',
                                    boundaryGap: [0, 0.1],
                                    show: false
                                }
                            ],
                            series: [
                                {
                                    name: '租用端口',
                                    type: 'bar',
                                    stack: 'sum',
                                    itemStyle: {
                                        normal: {
                                            color: '#12a87f',
                                            barBorderColor: 'tomato',
                                            barBorderWidth: 0,
                                            barBorderRadius: 0,
                                            label: {
                                                show: true,
                                                position: 'insideTop',
                                                formatter: function (params) {
                                                    for (var i = 0, l = option.xAxis[0].data.length; i < l; i++) {
                                                        if (option.xAxis[0].data[i] == params.name) {
                                                            return option.series[0].data[i] + params.value;
                                                        }
                                                    }
                                                },
                                                textStyle: {
                                                    color: '#fff'
                                                }
                                            }
                                        }
                                    },
                                    barMinHeight: 25,
                                    data: seriesData1
                                },
                                {
                                    name: '空闲端口',
                                    type: 'bar',
                                    stack: 'sum',
                                    barCategoryGap: '50%',
                                    itemStyle: {
                                        normal: {
                                            color: '#55639a',
                                            barBorderColor: 'tomato',
                                            barBorderWidth: 0,
                                            barBorderRadius: 0,
                                            label: {
                                                show: true, position: 'insideTop'
                                            }
                                        }
                                    },
                                    barMinHeight: 25,
                                    data: seriesData2
                                }
                            ]
                        };

                        myChart.setOption(option);
                    }
                },
                mounted: function () {
                    this.getData();
                }
            });
        }


        function drawCustomerMap() {
            var vue_customerMap = new Vue({
                el: '#div_customerMap',
                data: {
                    title: '客户地市分布',
                    currentName: '四川省',
                    gradeData: [],//数据中心数据
                    areadata: [],//地区数据
                    parentChart: {},//中国地图echartInstance
                    currentChart: {},//当前地图echartInstance
                    isOpenWaitting: true,//是否开启数据加载loading动画
                    isFirst: true, //是否是第一次初始化地图数据
                    isShowMapCircle: true//是否显示地图区域框
                },
                methods: {
                    showWaitting: function () {
                        $('#center').hide();
                        $('#centerWaitting').show();
                    },
                    closeWaitting: function () {
                        $('#centerWaitting').hide();
                        $('#center').show();
                    },
                    getGrateData: function () {
                        var _this = this;
                        if (_this.isFirst) _this.showWaitting();
                        proxy.getCutormerMapData({ areaname: _this.currentName }, function (res) {

                            if (_this.isFirst) {
                                var timeOut = setTimeout(function () {
                                    _this.closeWaitting();
                                    _this.isFirst = false;
                                    _this.gradeData = res;
                                    _this.createOption(_this.currentName);
                                    clearTimeout(timeOut);
                                }, 2000);
                            } else {
                                _this.closeWaitting();
                                _this.isFirst = false;
                                _this.gradeData = res;
                                _this.createOption(_this.currentName);
                            }


                        })
                    },
                    drawParentMap: function () {
                        var _this = this;
                        $.get('/lib/mapjson/中国.json', function (mapJson) {
                            echarts.registerMap('中国', mapJson);
                            var myChart = echarts.init(document.getElementById('mapChart2'));
                            var arr = []
                            for (var i = 0; i < mapJson.features.length; i++) {
                                if (mapJson.features[i].properties.name == "四川省")
                                    arr.push({
                                        "name": mapJson.features[i].properties.name,
                                        selected: true,
                                        emphasis: {
                                            label: {
                                                show: true,
                                                color: '#fff'
                                            }
                                        }
                                    });
                                else
                                    arr.push({ "name": mapJson.features[i].properties.name, selected: false });
                            }
                            var option = {
                                geo: {
                                    left: 10,
                                    right: 10,
                                    top: 0,
                                    bottom: 0,
                                    map: '中国',
                                    label: {
                                        normal: {
                                            show: false
                                        },
                                        emphasis: {
                                            show: false
                                        }
                                    },
                                    //是否可以点击鼠标、滚轮缩放
                                    roam: false,
                                    itemStyle: {
                                        normal: {
                                            label: {
                                                show: false
                                            },
                                            borderWidth: 1,//省份的边框宽度
                                            borderColor: '#fff',
                                            areaColor: '#119b7e'
                                        },
                                        emphasis: {
                                            label: {
                                                show: false,
                                                color: '#fff'
                                            }
                                        }
                                    }
                                },
                                series: [
                                    {
                                        left: 10,
                                        right: 10,
                                        top: 0,
                                        bottom: 0,
                                        name: '中国',
                                        type: 'map',
                                        mapType: '中国',
                                        label: {
                                            normal: {
                                                show: false
                                            },
                                            emphasis: {
                                                show: false
                                            }
                                        },
                                        itemStyle: {
                                            normal: {
                                                label: {
                                                    show: false
                                                },
                                                borderWidth: 1,//省份的边框宽度
                                                borderColor: '#fff',
                                                areaColor: '#119b7e'
                                            },
                                            emphasis: {
                                                label: {
                                                    show: false,
                                                    color: '#fff'
                                                },
                                                areaColor: '#1f8be7'
                                            }
                                        },
                                        data: arr
                                    },
                                    {
                                        name: 'city',
                                        type: 'effectScatter',
                                        coordinateSystem: 'geo',
                                        rippleEffect: {
                                            brushType: 'stroke'
                                        },
                                        label: {
                                            normal: {
                                                show: false,
                                                position: 'right',
                                                formatter: '{b}'
                                            }
                                        },
                                        symbolSize: 8,
                                        itemStyle: {
                                            normal: {
                                                color: '#fff'
                                            }
                                        },
                                        data: [{
                                            name: '四川省', value: [102.258746, 27.886762]
                                        }]
                                    }
                                ]
                            };
                            myChart.setOption(option, false);
                            _this.parentChart = myChart;
                        });
                    },
                    drawMap: function () {
                        var _this = this;

                        if (_this.currentName == "四川省") {
                            $('#backup').hide();
                        } else {
                            $('#backup').show();
                        }
                        _this.getGrateData();

                    },
                    backToMaxUp: function (obj) {
                        var _this = this;
                        _this.currentChart.clear();
                        _this.currentChart.dispose();//创建新的对象之前需要把老对象释放掉
                        //$('#mapChart2').height('330px');
                        $('#mapChart2').show();
                        //$('#mapCircle').height('640px');
                        $('#mapCircle').show();
                        //$('#mapChart1').height('640px');
                        $('#line').show();
                        _this.drawParentMap();
                        $(obj.target).hide();
                        _this.currentName = "四川省";
                        _this.drawMap();
                    },
                    createOption: function (areaname) {
                        var _this = this;
                        $.get('/lib/mapjson/' + areaname + '.json', function (mapJson) {
                            echarts.registerMap(areaname, mapJson);
                            console.log(mapJson);
                            var series = [], dataSeries = [], geo = {};
                            for (var i = 0; i < mapJson.features.length; i++) {
                                dataSeries.push({ "name": mapJson.features[i].properties.name, "value": mapJson.features[i].properties.centroid });
                            }
                            _this.areadata = dataSeries;
                            geo = {
                                map: areaname,
                                type: 'map',
                                roam: true,
                                label: {
                                    normal: {
                                        show: true,
                                        color: '#fff'
                                    },
                                    emphasis: {
                                        textStyle: {
                                            color: '#fff'
                                        }
                                    }
                                },
                                aspectScale:1,
                                itemStyle: {
                                    normal: {
                                        label: {
                                            show: true,
                                            color: '#fff'
                                        },
                                        borderWidth: 1,//省份的边框宽度
                                        borderColor: '#fff',
                                        areaColor: '#119b7e'
                                    },
                                    emphasis: {
                                        label: {
                                            show: true
                                        },
                                        areaColor: '#1f8be7'
                                    }
                                },
                                //left: 10,
                                //right: 10,
                                //top: 50,
                                //bottom: 50

                            };
                            //if (areaname != "四川省") {

                            //}
                            series = [
                                {
                                    name: '数据中心(待评级)',
                                    type: 'scatter',
                                    coordinateSystem: 'geo',
                                    symbolSize: 10,
                                    symbol: 'path://M958.733019 411.348626 659.258367 353.59527 511.998465 85.535095 364.741633 353.59527 65.265958 411.348626 273.72878 634.744555 235.88794 938.463881 511.998465 808.479435 788.091594 938.463881 750.250754 634.744555Z',
                                    itemStyle: {
                                        normal: {
                                            color: '#fff'
                                        }
                                    },
                                    data: []
                                },
                                {
                                    //name: '数据中心(待评级)',
                                    type: 'scatter',
                                    coordinateSystem: 'geo',
                                    symbolSize: 10,
                                    symbol: 'path://M958.733019 411.348626 659.258367 353.59527 511.998465 85.535095 364.741633 353.59527 65.265958 411.348626 273.72878 634.744555 235.88794 938.463881 511.998465 808.479435 788.091594 938.463881 750.250754 634.744555Z',
                                    itemStyle: {
                                        normal: {
                                            color: function (params) {
                                                var c = '#fff';
                                                switch (params.data.value1) {
                                                    case 1: c = '#f3ad6a'; break;
                                                    case 2: c = '#f7945d'; break;
                                                    case 3: c = '#f97b57'; break;
                                                    case 4: c = '#f66356'; break;
                                                    case 5: c = '#ee4d5a'; break;
                                                    default: c = '#e5e5e5'; break;
                                                }
                                                return c
                                            }
                                        }
                                    },
                                    data: _this.gradeData
                                },
                                {
                                    name: '地区',
                                    type: 'scatter',
                                    coordinateSystem: 'geo',
                                    symbolSize: 5,
                                    symbol: 'circle',

                                    itemStyle: {
                                        normal: {
                                            color: '#fff'
                                        }
                                    },
                                    data: _this.areadata
                                }
                            ];

                            _this.currentChart = echarts.init(document.getElementById('mapChart1'));
                            var option = {
                                //tooltip: {
                                //	trigger: 'item',
                                //	formatter: function (a) {//鼠标移到某个州市上弹出的提示内容。包括显示样式可以自定义，利用return返回样式即可。
                                //		if (a.data == null) return 'undefined:undefined';
                                //		return a.data.name + ":" + a.data.value;
                                //	}
                                //},
                                legend: {
                                    x: 120,
                                    y: 'bottom',
                                    data: [
                                        {
                                            name: '数据中心(待评级)',
                                            icon: 'path://M958.733019 411.348626 659.258367 353.59527 511.998465 85.535095 364.741633 353.59527 65.265958 411.348626 273.72878 634.744555 235.88794 938.463881 511.998465 808.479435 788.091594 938.463881 750.250754 634.744555Z',
                                            textStyle: {
                                                color: '#fff',
                                                fontSize: 10
                                            }
                                        }
                                        , {
                                            name: '地区',
                                            icon: 'circle',
                                            textStyle: {
                                                color: '#fff',
                                                fontSize: 10
                                            }
                                        }]
                                    , selectedMode: false
                                },
                                geo: geo,
                                series: series
                            };
                            _this.currentChart.setOption(option, false);
                            _this.currentChart.on('click', function (result) {
                                var selectCity = result.name;
                                $.get('/lib/mapjson/' + selectCity + '.json', function (mapJson) {
                                    _this.currentName = selectCity;
                                    _this.currentChart.clear();
                                    _this.currentChart.dispose();//创建新的对象之前需要把老对象释放掉
                                    _this.parentChart.dispose(); //创建新的对象之前需要把老对象释放掉
                                    $('#mapChart2').hide();
                                    $('#line').hide();
                                    //$('#mapCircle').hide();
                                    //$('#mapChart2').height('0px');
                                    //$('#mapChart1').height('970px');
                                    _this.isOpenWaitting = true;
                                    _this.isShowMapCircle = false;
                                    _this.drawMap();
                                });
                            });
                            _this.currentChart.on('georoam', function (params) {
                                console.log(params);
                                if (_this.currentName == "四川省") {
                                    if ($('#mapChart2').is(':hidden')) return;
                                    //_this.currentChart.clear();
                                    //_this.currentChart.dispose();//创建新的对象之前需要把老对象释放掉

                                    _this.parentChart.clear();
                                    _this.parentChart.dispose(); //创建新的对象之前需要把老对象释放掉
                                    $('#line').hide();
                                    $('#mapChart2').hide();
                                    //$('#mapChart2').height('0px');
                                    //$('#mapChart1').height('970px');
                                    //$('#mapCircle').height('970px');
                                    //_this.createOption(_this.currentName);
                                    _this.isOpenWaitting = false;
                                    _this.isShowMapCircle = false;
                                    //_this.drawMap();
                                }
                            });

                        });
                    },
                    mouseoverMapCircle: function (obj) {
                        $(obj.target).hide();

                    },
                    mouseoverMap: function () {
                        $('#mapCircle').hide();
                    },
                    mouseoutMap: function () {
                        var _this = this;
                        if (_this.currentName == "四川省")
                            $('#mapCircle').show();
                        $('#mapCircle div').show();
                    }
                },
                mounted: function () {
                    this.drawParentMap();
                    this.drawMap();
                }
            });
        }



        $(function () {
            drawJiGUse();
            drawIpUseMonitor();
            drawJiGResource();
            drawPortResource();
            drawCustomerMap();
            //vproxy.getRackUseage(function (data) {
            //    drawJiGUse()
            //});
        })
    </script>
</body>


</html>
